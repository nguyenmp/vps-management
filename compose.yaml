
---

services:
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker"
    ports:
      # The HTTP port
      - "80:80"
      # The HTTP port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  hikariita:
    build: https://github.com/nguyenmp/hikariita.git
    volumes:
      - ${HIKARIITA_DB_FILE-/mnt/volume_sfo3_01/hikariita/example.db}:/usr/src/app/example.db
    labels:
      - "traefik.http.routers.hikariita.rule=Host(`hikariita.docker.localhost`) || Host(`hikariita.href.cat`)"
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./www/:/etc/nginx/www/:ro
    ports:
      - "7070:80"
    environment:
      - NGINX_PORT=80
    labels:
      - "traefik.http.routers.nginx.rule=PathPrefix(`/.well-known/acme-challenge/`)"
      - "traefik.http.routers.nginx.priority=1000"
  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io
    volumes:
      - changedetection-data:/datastore
    ports:
      - 9000:5000
    restart: unless-stopped
    labels:
      - "traefik.http.routers.changes.rule=Host(`changes.docker.localhost`) || Host(`changes.href.cat`)"
  archivebox:
    image: archivebox/archivebox:latest
    ports:
      - 8000:8000
    volumes:
      - ./archivebox-data:/data
      # ./data/personas/Default/chrome_profile/Default:/data/personas/Default/chrome_profile/Default
    environment:
      # - ADMIN_USERNAME=admin            # create an admin user on first run with the given user/pass combo
      # - ADMIN_PASSWORD=SomeSecretPassword
      - CSRF_TRUSTED_ORIGINS=https://archivebox.example.com  # REQUIRED for auth, REST API, etc. to work
      - ALLOWED_HOSTS=*                   # set this to the hostname(s) from your CSRF_TRUSTED_ORIGINS
      - PUBLIC_INDEX=True                 # set to False to prevent anonymous users from viewing snapshot list
      - PUBLIC_SNAPSHOTS=True             # set to False to prevent anonymous users from viewing snapshot content
      - PUBLIC_ADD_VIEW=False             # set to True to allow anonymous users to submit new URLs to archive
      - SEARCH_BACKEND_ENGINE=sonic       # tells ArchiveBox to use sonic container below for fast full-text search
      - SEARCH_BACKEND_HOST_NAME=sonic
      - SEARCH_BACKEND_PASSWORD=SomeSecretPassword
      # - PUID=911                        # set to your host user's UID & GID if you encounter permissions issues
      # - PGID=911                        # UID/GIDs <500 may clash with existing users and are not recommended
      # - MEDIA_MAX_SIZE=750m             # increase this filesize limit to allow archiving larger audio/video files
      # - TIMEOUT=60                      # increase this number to 120+ seconds if you see many slow downloads timing out
      # - CHECK_SSL_VALIDITY=True         # set to False to disable strict SSL checking (allows saving URLs w/ broken certs)
      # - SAVE_ARCHIVE_DOT_ORG=True       # set to False to disable submitting all URLs to Archive.org when archiving
      # - USER_AGENT="..."                # set a custom USER_AGENT to avoid being blocked as a bot
      # ...
      # add further configuration options from archivebox/config.py as needed (to apply them only to this container)
      # or set using `docker compose run archivebox config --set SOME_KEY=someval` (to persist config across all containers)
    # For ad-blocking during archiving, uncomment this section and pihole service section below
    # networks:
    #   - dns
    # dns:
    #   - 172.20.0.53
    labels:
      - "traefik.http.routers.archivebox.rule=Host(`archivebox.docker.localhost`) || Host(`archivebox.href.cat`)"

  sonic:
    image: valeriansaliou/sonic:latest
    build:
      # custom build just auto-downloads archivebox's default sonic.cfg as a convenience
      # not needed after first run / if you have already have ./etc/sonic.cfg present
      dockerfile_inline: |
        FROM quay.io/curl/curl:latest AS config_downloader
        RUN curl -fsSL 'https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/stable/etc/sonic.cfg' > /tmp/sonic.cfg
        FROM valeriansaliou/sonic:latest
        COPY --from=config_downloader /tmp/sonic.cfg /etc/sonic.cfg
    expose:
      - 1491
    environment:
      - SEARCH_BACKEND_PASSWORD=SomeSecretPassword
    volumes:
      #- ./sonic.cfg:/etc/sonic.cfg:ro    # use this if you prefer to download the config on the host and mount it manually
      - ./sonic-data/sonic:/var/lib/sonic/store

volumes:
  changedetection-data: